name: Test MacOS/Ubuntu/Windows compilation
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  macos_build:
    name: macOS Build Test
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: brew
      run: brew install automake libtool
    - name: autogen
      run: ./autogen.sh
    - name: configure
      run: ./configure
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make distcheck
      run: make distcheck

  ubuntu_build:
    name: Ubuntu Build Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: autogen
      run: ./autogen.sh
    - name: configure
      run: ./configure
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make distcheck
      run: make distcheck

  windows_build:
    name: Windows Build Test
    runs-on: windows-latest
    env:
      # Path to the solution file relative to the root of the project.
      SOLUTION_FILE_PATH: wolfssl64.sln

      # Configuration type to build.
      # You can convert this to a build matrix if you need coverage of multiple configuration types.
      # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      BUILD_CONFIGURATION: Release
      BUILD_PLATFORM: x64
    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:PlatformToolset=v142 /p:Platform=${{env.BUILD_PLATFORM}} /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

